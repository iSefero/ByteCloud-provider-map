{"version":3,"file":"static/js/466.a6fc4092.chunk.js","mappings":"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","sources":["components/Users/Users.jsx"],"sourcesContent":["// React\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// Common\r\nimport small from \"../../assets/icons/small.png\";\r\nimport smallMask from \"../../assets/icons/small_mask.png\";\r\nimport medium from \"../../assets/icons/medium.png\";\r\nimport mediumMask from \"../../assets/icons/medium_mask.png\";\r\nimport large from \"../../assets/icons/large.png\";\r\nimport largeMask from \"../../assets/icons/large_mask.png\";\r\nimport { otherStyles } from \"./UsersStyles\"\r\n\r\nconst Users = ({left, top, styles, name, latency}) => {\r\n  const { usersValue, mapSize } = useSelector(state => state.data);\r\n  const currentCount = usersValue.find((item) => item.name === name);\r\n\r\n  const locationW = (posX) => mapSize.width * posX;\r\n  const locationH = (posY) => mapSize.height * posY;\r\n\r\n  const [smallPathValue, setSmallPathValue] = React.useState(\"inset(0% 90% 0% 10%)\");\r\n  const [mediumPathValue, setMediumPathValue] = React.useState(\"inset(0% 76% 0% 24%)\");\r\n  const [largePathValue, setLargePathValue] = React.useState(\"inset(0% 67% 0% 33%)\");\r\n\r\n\r\n  React.useEffect(() => {\r\n    const changeClipPath = (startX, endX, startY, endY, duration, changeState) => {\r\n      const start = Date.now();\r\n      const interval = setInterval(() => {\r\n        const timeElapsed = Date.now() - start;\r\n        const progress = timeElapsed / (duration * 15);\r\n        if (progress >= 1) {\r\n          clearInterval(interval);\r\n        }\r\n        const x = startX + (endX - startX) * progress;\r\n        const newClipPathValue = `inset(0% ${x}% 0% ${endX}%)`;\r\n        changeState(newClipPathValue);\r\n      });\r\n    };\r\n      if (latency) {\r\n        latency && changeClipPath(90, 10, 0, 0, latency.latency.small, setSmallPathValue);\r\n        latency && changeClipPath(76, 24, 0, 0, latency.latency.medium, setMediumPathValue);\r\n        latency && changeClipPath(67, 33, 0, 0, latency.latency.large, setLargePathValue);\r\n      }\r\n  }, [latency]);\r\n\r\n\r\n  return (\r\n    <div style={otherStyles.wrapper({locationH, top, locationW, left})}>\r\n      {currentCount.count >= 1 && <div style={styles?.large({locationW, locationH})}>\r\n        <img\r\n          src={small}\r\n          alt=\"error\"\r\n          width=\"50%\"/>\r\n        <img\r\n          style={{ position: \"absolute\", top: 0, left: 0, opacity: 0.4, clipPath: smallPathValue}}\r\n          src={smallMask}\r\n          alt=\"error\"\r\n          width=\"50%\"\r\n        />\r\n      </div>}\r\n      {currentCount.count >= 2 && <div style={styles?.medium({locationW, locationH})}>\r\n        <img\r\n          src={medium}\r\n          alt=\"error\"\r\n          width=\"50%\"/>\r\n        <img\r\n          style={{position: \"absolute\", top: 0, left: 0, opacity: 0.4, clipPath: mediumPathValue}}\r\n          src={mediumMask}\r\n          alt=\"error\"\r\n          width=\"50%\"\r\n        />\r\n      </div>}\r\n      {currentCount.count >= 3 && <div style={styles?.small({locationW, locationH})}>\r\n        <img\r\n          src={large}\r\n          alt=\"error\"\r\n          width=\"50%\"/>\r\n        <img\r\n          style={{position: \"absolute\", top: 0, left: 0, opacity: 0.4, clipPath: largePathValue}}\r\n          src={largeMask}\r\n          alt=\"error\"\r\n          width=\"50%\"\r\n        />\r\n      </div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"names":["_ref","left","top","styles","name","latency","_useSelector","useSelector","state","data","usersValue","mapSize","currentCount","find","item","locationW","posX","width","locationH","posY","height","_React$useState","React","_React$useState2","_slicedToArray","smallPathValue","setSmallPathValue","_React$useState3","_React$useState4","mediumPathValue","setMediumPathValue","_React$useState5","_React$useState6","largePathValue","setLargePathValue","changeClipPath","startX","endX","startY","endY","duration","changeState","start","Date","now","interval","setInterval","progress","clearInterval","newClipPathValue","concat","small","medium","large","_jsxs","style","otherStyles","children","count","_jsx","src","alt","position","opacity","clipPath"],"sourceRoot":""}